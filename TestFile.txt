namespace Shpoon
{
    class TestClass
    {
		string name;
		
        int temp(int v)
        {
			if (v > 2)
			{
				return v + 5;
			}
			else
			{
				do
				{
					v++;
				}
				while (v < 10);
				;
				for (int i = 0;i < 11;i++)
					v = (v + i) * 2;
				
				return v;
			}
			int a = 4, b = 5;
			// int i, a, b;
			for (int i = 0, a = 4, b = 5; i < 10; i++, a++, b--)
			{
				
			}
		
		"{forToken} {rBraceOpen}"
		TokenString[] forParts = tStr.GetBetweenBrackets(ref index).Split(TokenType.lineEnd);
		
		
		"{forToken} {rBraceOpen} {typeNameToken} \EXPRESSION ({commaToken} \EXPRESSION) * {lineEndToken} \EXPRESSION {lineEndToken} (\EXPRESSION ({commaToken} \EXPRESSION) *)?"
		"{forToken} {rBraceOpen} (\EXPRESSION ({commaToken} \EXPRESSION) *)? {lineEndToken} \EXPRESSION {lineEndToken} (\EXPRESSION ({commaToken} \EXPRESSION) *)?"
		
		a = 10 * (b + 17) + 1;
		
		"({identifierToken}|{constantToken}|{rBraceOpen}{Anything}*{rBraceClose}) {binaryOperatorToken} ({identifierToken}|{constantToken}|{rBraceOpen}{Anything}*{rBraceClose})"
		
		
        }
    }
}
